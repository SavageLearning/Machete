@model Machete.Domain.Person
@using Machete.Web.Resources
@{  
    string recType = "person";
    string idPrefix = recType + Model.ID + "-";
}
@using (Html.BeginForm("Create", "Person", FormMethod.Post, 
    new { @id = "personCreateForm" }))
{
    @Html.AntiForgeryToken()
    <input type="button" onclick="FindPersonDuplicate()" id="@(idPrefix)SaveBtn" class="formButton saveBtn" 
            value="@Persons.createsubmit" tabindex="9"/>
    <input type="button" onclick="setFormData(true)" id="@(idPrefix)SaveBtn" class="formButton saveBtn" 
            value="Clear" tabindex="9"/>
    @Html.ValidationSummary(true)
    @Html.EditorForModel()
}

<div id="messageDialog" title="Warning">
</div>

<script type="text/javascript">
    $(document).ready(function () {

        setFormData(false);
        var personCreateForm = $('#personCreateForm');
        $('.formButton').button();
        $.validator.unobtrusive.parseDynamicContent(personCreateForm);
        $('#firstname1').focus();

        personCreateForm.mUI('tabFormSubmit', {
            recType: "@(recType)", //for add_rectab
            create: true,
            formLevel: 1
        });
        //
        // machete UI detect changes on forms in tabs   
        personCreateForm.mUI('formDetectChanges', {
            recType: "@(recType)",
            formLevel: 1,
            changeConfirm: "@(Machete.Web.Resources.Shared.changeConfirm)",
            changeTitle: "@(Machete.Web.Resources.Shared.changeTitle)"
        });
    });

    // function to restore typed-not saved fields on Create New Person form when tabbing back from List of Persons
    function setFormData(clearForm) {
        
        //Fields = ["firstname1", "firstname2", "lastname1", "lastname2",
        //    "phone", "address1", "address2", "city", "state", "gender", "genderOther", "active"];
        
        //for (field in Fields) {
        //    var a = $("#person0-" + field)[0].value;
        //    if (a != null && a > 0) {
        //        a[0].value = clearForm ? "" : window.localStorage.getItem(field);
        //    }
        //}

        $("#person0-firstname1")[0].value = clearForm ? "" : window.localStorage.getItem("firstname1");
        $("#person0-firstname2")[0].value = clearForm ? "" : window.localStorage.getItem("firstname1");
        $("#person0-lastname1")[0].value = clearForm ? "" : window.localStorage.getItem("lastname1");
        $("#person0-lastname2")[0].value = clearForm ? "" : window.localStorage.getItem("lastname2");
        $("#person0-phone")[0].value = clearForm ? "" : window.localStorage.getItem("phone");
        $("#person0-address1")[0].value = clearForm ? "" : window.localStorage.getItem("address1");
        $("#person0-address2")[0].value = clearForm ? "" : window.localStorage.getItem("address2");
        $("#person0-city")[0].value = clearForm ? "" : window.localStorage.getItem("city");
        $("#person0-state")[0].value = clearForm ? "" : window.localStorage.getItem("state");
        $("#person0-gender")[0].value = clearForm ? "" : window.localStorage.getItem("gender");
        $("#person0-genderOther")[0].value = clearForm ? "" : window.localStorage.getItem("genderOther");
        $("#person0-active")[0].value = clearForm ? "" : window.localStorage.getItem("active");

        //    $("#person0-" + field[0].valueOf) = clearForm ? "" : window.localStorage.getItem(field);

 
    }

    

    var messageDialog = $("#messageDialog").dialog({
        autoOpen: false,
        height: 400,
        width: 400,
        modal: true,
        closeOnEscape: false,
        buttons: {
            "Cancel": function () { $(this).dialog("close"); },
            "Save": function () { $(this).dialog("close"); savePerson(); }
        }
    });


    function FindPersonDuplicate() {
        $.ajax({
            url: "/Person/GetDuplicates",
            data: {
                firstname: $('#person0-firstname1')[0].value,
                lastname: $('#person0-lastname1')[0].value,
                phone: $('#person0-phone')[0].value
            }, 
            success: onSuccessFindPersonDuplicate,
            dataType: "json"
        });
    }

    function CreateHtmlText(duplicates) {
        var dialogHtmlText = '<p>  Already found persons with similar names:'
            +  '<table class="duplicatePersons" style="width:100%" border="1" cellpadding="2">'
            + '<tr>'
            + '<th>First Name</th>'
            + '<th>Last Name</th>'
            + '<th>Phone number</th>'
            +'</tr>';
        for (var i = 0; i < duplicates.length; i++) {
            dialogHtmlText += '<tr>' 
                + '<td>'+ duplicates[i]["First Name"] + '</td>'
                + '<td>'+ duplicates[i]["Last Name"] + '</td>'
                + '<td>'+ duplicates[i]["Phone"] + '</td> </tr>';
        }

        dialogHtmlText += '</table> <p></p> <p></p> Do you still want to save? </p>';
        
        return dialogHtmlText;
    }

    function onSuccessFindPersonDuplicate(result) {
        if (result.duplicates.length > 0) {

            messageDialog.dialog("open");
            messageDialog.html(CreateHtmlText(result.duplicates));
        }
        else {
            savePerson();
        }
    }

    function savePerson() {
        $("#personCreateForm").submit();
    }
</script>