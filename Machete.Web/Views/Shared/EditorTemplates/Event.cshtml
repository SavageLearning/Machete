@model Machete.Domain.Event
@using Machete.Web.Helpers
@using Machete.Web.Resources
@using Machete.Domain.Resources
@using Machete.Domain
@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
    string recType = "event";
    string idPrefix = recType + Model.ID + "-";
    string jeviPrefix = "";
    string parentPrefix = "person" + Model.PersonID + "-";
}
@Html.HiddenFor(model => model.ID, new { @class = "hiddenRecID" })
@Html.HiddenFor(model => model.PersonID, new { @id = idPrefix + "PersonID" })
<div class="tb-table">
    <div class="tb-row">
        <div class="mui-event-edit-label tb-label">
            @Html.LabelFor(model => model.eventType)
        </div>
        <div class="mui-event-edit-field tb-field">
            @Html.DropDownListFor(model => model.eventType, 
                                  new SelectList(Lookups.getSelectList(Machete.Domain.LCategory.eventtype), 
                                                 "Value", 
                                                 "Text",
                                                 Model.eventType), 
                                                 @Machete.Web.Resources.Shared.choose,
                                  new { tabindex = "2", id = idPrefix + "eventType" })
            @Html.ValidationMessageFor(model => model.eventType)
        </div>
        <div class="mui-event-edit-label tb-label">
            @Html.LabelFor(model => model.dateFrom)
        </div>
        <div class="tb-field">
            @Html.TextBox("dateFrom", Html.Encode(System.String.Format("{0:d}", Model.dateFrom)), new { @id = idPrefix + "dateFrom", @class="ui-datepicker" })
            @Html.ValidationMessageFor(model => model.dateFrom)
        </div>
        <div class="mui-event-edit-label tb-label">
            @Html.LabelFor(model => model.dateTo)
        </div>
        <div class="tb-field">
            @Html.TextBox("dateTo", Html.Encode(System.String.Format("{0:d}", Model.dateTo)), new { @id = idPrefix + "dateTo", @class = "ui-datepicker" })
            @Html.ValidationMessageFor(model => model.dateTo)
        </div>
    </div>
</div>
<div class="tb-table">
    <div class="tb-row">

        <div class="mui-event-edit-label tb-label">
            @Html.LabelFor(model => model.notes)
        </div>
        <div class="mui-event-edit-textarea tb-field">
            @Html.TextAreaFor(model => model.notes, new { @class="desc-field" , id = idPrefix + "notes"})
            @Html.ValidationMessageFor(model => model.notes)
        </div>
    </div>
</div>
@if (Model.JoinEventImages != null)
{
<hr />
<div id="gallery" class="mui-event-image-gallery tb-table">
    @foreach (JoinEventImage jevi in Model.JoinEventImages)
    {   
        jeviPrefix = "jevi" + jevi.ID + "-"; 
        <div class="tb-row mui-event-image-row" jeviID="@(jevi.ID)" evntID="@(Model.ID)">
            <div class="mui-event-image-item tb-cell">
                @if (jevi.Image.ImageMimeType.StartsWith("image"))
                {
                    <a class="galleryImage" href="/Image/GetImage/@(jevi.ImageID)">
                    <img src="/Image/GetImage/@(jevi.ImageID)" width="100" alt="" /></a>
                }
                else
                {
                    <a class="galleryFile" href="/Image/GetImage/@(jevi.ImageID)">
                    <img src="@Url.Content("~/Content/images/Files-Download-File-icon.png")" width="100" alt="" /></a>
                }
            </div>
            <div class="tb-table mui-event-image-text-table">
                <div class="tb-row">
                    <div class="mui-event-image-text-row-label tb-label">
                        @Html.Label("filename", "filename")
                    </div>
                    <div class="mui-event-image-text-row-field tb-field">
                        @Html.TextBox("filename", jevi.Image.filename, new { disabled = "disabled" })
                    </div>
                </div>
                <div class="tb-row">
                    <div class="mui-event-image-text-row-label tb-label">
                        @Html.Label("datecreated", "datecreated")
                    </div>
                    <div class="mui-event-image-text-row-field tb-field">
                        @Html.TextBox("datecreated", jevi.Image.datecreated, new { disabled = "disabled" })
                    </div>
                </div>
                <div class="tb-row">
                    <div class="mui-event-image-text-row-label tb-label">
                        @Html.Label("Createdby", "Createdby")
                    </div>
                    <div class="mui-event-image-text-row-field tb-field">
                        @Html.TextBox("Createdby", jevi.Image.Createdby, new { disabled="disabled"})
                    </div>
                </div>
                <div class="tb-row">
                    <div class="tb-cell">
                    </div>
                    <div class="tb-cell">
                        <input type="button" value="@Events.openfile" class="formButton jeviOpenBtn" id="@(jeviPrefix)OpenBtn" style="float: left;"/>
                        <input type="button" value="@Events.deletefile" class="formButton jeviDeleteBtn" 
                                 id="@(jeviPrefix)DeleteBtn" style="float: right;" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>
}
<div style="clear: left;">
@Html.Partial("ManagerInfo")
@Html.Partial("AdministratorInfo")
</div>    
<script type="text/javascript">
    $(document).ready(function () {
        var currentTabs = $('#@(parentPrefix)personPartsTabs');
        var eventTabIdx = $('li', currentTabs).index($('li.ui-tabs-selected', currentTabs));
//        $('.ui-datepicker').datepicker({
//            dateFormat: 'mm/dd/yy',
//            buttonImage: '@Url.Content("~/Content/calendar.gif")',
//            buttonImageOnly: true,
//            showOn: "button"
//        });
        $(".ui-datepicker").datetimepicker({
            stepMinute: 15,
            ampm: true,
            hourMin: 7,
            hourMax: 23,
            minuteMin: 0,
            minuteMax: 45,
            minuteGrid: 15,
            hourGrid: 4
        });
        $('.galleryImage').lightBox();
        //
        //
        $('.jeviDeleteBtn').each(function (i, btn) {
            $(btn).mUI('btnEventImageDelete', {
                ok: "@Events.deletesubmit",
                confirm: '@Events.deleteconfirmation',
                title: '@Events.deletetitle',
                params: { evntID: $(this).closest('.mui-event-image-row').attr('evntID'),
                    jeviID: $(this).closest('.mui-event-image-row').attr('jeviID')
                },
                action: "/Event/DeleteImage",
                callback: function () {
                    currentTabs.tabs('load', eventTabIdx);
                }
            });
        });
        //
        //
        $('.jeviOpenBtn').each(function (i, btn) {
            $(btn).bind('click', function () {                
                var anchor = $(btn).closest('.mui-event-image-row').find('div.mui-event-image-item a').attr('href');
                window.open(anchor);
            });
        });
    });
</script>