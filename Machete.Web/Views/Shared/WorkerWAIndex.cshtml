@model Machete.Web.ViewModel.Worker
@using Machete.Web.Helpers

@using Machete.Web.Resources
@using Machete.Service

@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
    string recType = "worker";
    //string idPrefix = recType + "-";
    string parentPrefix = "person" + Model.ID + "-";
    string idPrefix = recType + Model.ID + "-";
}
<div id="workAssignTabs-wo-@(Model.ID)">
    <ul>
        <li>
            <a href="#workAssignList-wo-@(Model.ID)"
               class="workAssignListTab ListTab"
               id="walt-@(Model.ID)">@WorkAssignments.listlink</a>
        </li>
    </ul>
    <div id="workAssignList-wo-@(Model.ID)">
        <table id="workAssignTable-wo-@(Model.ID)" class="display">
            <thead>
                <tr>
                    <th>ID#</th>
                    <th>@WorkOrder.dateTimeofWork</th>
                    <th>@WorkAssignment.skillID</th>
                    <th>@WorkAssignment.hourlyWage</th>
                    <th>@WorkAssignment.hours</th>
                    <th>@Employer.name</th>
                    <th>@WorkAssignment.days</th>
                    <th>@WorkAssignments.earnings</th>
                    <th>@WorkAssignment.description</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#workAssignTabs-wo-@(Model.ID)').mUI('createTabs', {
                prefix: "ui-tabs-workAssign-wo-@(Model.ID)-",
                defaultTab: 1,
                formLevel: 3,
                changeConfirm: "@(Machete.Web.Resources.Shared.changeConfirm)",
                changeTitle: "@(Machete.Web.Resources.Shared.changeTitle)",
                updateDatatable: true
            });

            jqrfyTable({
                table: $('#workAssignTable-wo-@(Model.ID)'),
                tab: $('#workAssignTabs-wo-@(Model.ID)'),
                options: {
                    "bPaginate": true,
                    "bLengthChange": true,
                    "aaSorting": [[1, 'desc']],
                    "bFilter": true,
                    "bSort": true,
                    "bInfo": true,
                    "bAutoWidth": false,
                    "bServerSide": true,
                    "sAjaxSource": "/WorkAssignment/AjaxHandler",
                    "oLanguage": datatable_lang_@(CI.TwoLetterISOLanguageName),
                    "bProcessing": true,
                    "aoColumns": [
                                    { "mDataProp": "WID", "bSearchable": false, "bSortable": false, "bVisible": false },
                                    { "mDataProp": "dateTimeofWork" },
                                    { "mDataProp": "skill" },
                                    { "mDataProp": "hourlywage" },
                                    { "mDataProp": "hours" },
                                    { "mDataProp": "employername" },
                                    { "mDataProp": "days" },
                                    { "mDataProp": "earnings" },
                                    { "mDataProp": "description" }
                    ],
                    "aoSearchCols": [{ "sSearch": "@(Model.ID)" }, null, null, null, null, null, null, null, null],
                    "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                        switch (aData['asmtStatus']) {
                            // magic strings in WorkAssignmentController
                            case "active": $(nRow).addClass('statusBlue'); break;
                            case "completed": $(nRow).addClass('statusGreen'); break;
                            case "incomplete": $(nRow).addClass('statusOrange'); break;
                            case "orphaned": $(nRow).addClass('statusYellow'); break;
                            case "cancelled": $(nRow).addClass('statusRed'); break;
                            default: $(nRow).addClass('statusBlue');
                        }

                        return nRow;
                    },
                    "fnServerDataExtra": function () {
                        return [
                            { "name": "showPending", "value": true },
                            { "name": "personID", "value": @(Model.ID) }
                        ]
                    }
                }
            });
        });
    </script>
