@model Machete.Domain.Event
@using Machete.Web.Resources
@using Machete.Web.Helpers
@using Machete.Domain
@{
    System.Globalization.CultureInfo CI = (System.Globalization.CultureInfo)Session["Culture"];
    string recType = "event";
    string idPrefix = recType + Model.ID + "-";
    string parentPrefix = "person" + Model.PersonID + "-";
}

@using (Html.BeginForm("Edit", "Event", FormMethod.Post,
                    new { @class = "edittab-form EditPost", 
                          @id = "eventEditForm-" + Model.ID, 
                          enctype = "multipart/form-data" }))
{
    <input type="submit" value="@Events.editsubmit" class="formButton saveBtn"/>
    <input type="button" value="@Events.addfile" class="formButton" id="@(idPrefix)AddImgBtn"/>
    if (Html.IsInRole(Html.Role_AM()))
    {
        <input id="deleteEventBtn-@(Model.ID)" type="button" value="@Events.deletesubmit" 
                class="formButton deleteButton" />
    }
    <br />  
    @Html.ValidationSummary(true)
    @Html.EditorForModel()
}

@if (Html.IsInRole(Html.Role_AM()))
{
    using (Html.BeginForm("Delete", "Event", FormMethod.Post,
                            new { @class = "edittab-form DeletePost", @id = "deleteEventForm-" + Model.ID }))
    {
        @Html.HiddenFor(model => model.ID);
    }
}

<div id="@(idPrefix)AddImageDialog">
    @using (Html.BeginForm("AddImage", "Event", FormMethod.Post,
            new { @id = idPrefix + "AddImageForm", enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.ID);
        <input id="eventImageFile" type="file" name="imagefile"/>
        <input type="submit" value="@Events.uploadfile" class="formButton" id="@(idPrefix)AddImgSubmit" />
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {
        var eventForm = $('#eventEditForm-@Model.ID');
        var eventDeleteForm = $('#deleteEventForm-@Model.ID');
        var eventDeleteBtn = $('#deleteEventBtn-@(Model.ID)');
        var currentTabs = $('#@(parentPrefix)personPartsTabs');
        var eventTabIdx = $('li', currentTabs).index($('li.ui-tabs-selected', currentTabs));
        var addImgForm = $('#@(idPrefix)AddImageForm');
        var addImgDialog = $('#@(idPrefix)AddImageDialog');
        var addImgBtn = $('#@(idPrefix)AddImgBtn');
        //
        // Diaglog box to add the image
        addImgDialog.hide();
        addImgForm.mUI('tabFormSubmit', {
            create: false,
            formLevel: 1,
            selectTab: -1, //do nothing
            callback: function () {
                console.log($(currentTabs).attr('ID') + " - " + eventTabIdx);
                currentTabs.tabs('load', eventTabIdx);
                $(addImgDialog).parent().find('a.ui-dialog-titlebar-close').click();
            }
        });
        //
        //
        addImgBtn.bind('click', function () {
            console.log("AddImgBtn clicked");
            addImgDialog.dialog({ modal: true });
            addImgDialog.show();
        });
        $('.formButton').button();
        //
        //
        eventForm.mUI('tabFormSubmit', {
            create: false,
            selectTab: 2,
            formLevel: 1
        });
        //
        // post-ready validation hack
        $.validator.unobtrusive.parseDynamicContent(eventForm);
        //
        // delete button confirmation
        eventDeleteBtn.mUI('formClickDelete', {
            ok: "@Events.deletesubmit",
            confirm: '@Events.deleteconfirmation',
            title: '@Events.deletetitle',
            form: eventDeleteForm
        });
        //
        // machete UI detect changes on forms in tabs   
        eventForm.mUI('formDetectChanges', {
            recType: "@(recType)",
            formLevel: 1,
            changeConfirm: "@(Machete.Web.Resources.Shared.changeConfirm)",
            changeTitle: "@(Machete.Web.Resources.Shared.changeTitle)"
        });
    });
</script>