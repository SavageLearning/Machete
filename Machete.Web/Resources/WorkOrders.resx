<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="boxcontactname" xml:space="preserve">
    <value>Contact person:</value>
  </data>
  <data name="boxdatecreated" xml:space="preserve">
    <value>Created on:</value>
  </data>
  <data name="boxlegend" xml:space="preserve">
    <value>Work Order</value>
  </data>
  <data name="createlink" xml:space="preserve">
    <value>Create New Work Order</value>
  </data>
  <data name="createnolinkmsg" xml:space="preserve">
    <value>To create a new work order, you must first select an existing employer record or create a new employer. Click on the menu box (above) to create or select an employer. Alternatively, you can view an existing work order (below) and then view all orders for that employer.</value>
  </data>
  <data name="createsubmit" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="createtitle" xml:space="preserve">
    <value>workorder::create</value>
  </data>
  <data name="deleteconfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this work order? All information will be deleted, forever. If you want to de-activate this work order, cancel from this dialog and uncheck the 'active' box on the work order page.</value>
  </data>
  <data name="deletelink" xml:space="preserve">
    <value>Delete </value>
  </data>
  <data name="deletesubmit" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deletetitle" xml:space="preserve">
    <value>workorder::delete</value>
  </data>
  <data name="editlink" xml:space="preserve">
    <value>Edit </value>
  </data>
  <data name="editsubmit" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="edittitle" xml:space="preserve">
    <value>workorder::edit</value>
  </data>
  <data name="editworkorderlink" xml:space="preserve">
    <value>Edit work order</value>
  </data>
  <data name="indexreturnlink" xml:space="preserve">
    <value>Return to list of work orders</value>
  </data>
  <data name="indextitle" xml:space="preserve">
    <value>workorder::index</value>
  </data>
  <data name="listlink" xml:space="preserve">
    <value>List Work Orders</value>
  </data>
  <data name="listlinkall" xml:space="preserve">
    <value>List of ALL work orders</value>
  </data>
  <data name="listOfPositions" xml:space="preserve">
    <value>List of positions</value>
  </data>
  <data name="printWorkOrder" xml:space="preserve">
    <value>Print work order</value>
  </data>
  <data name="viewlink" xml:space="preserve">
    <value>View </value>
  </data>
  <data name="viewtitle" xml:space="preserve">
    <value>workorder::view</value>
  </data>
  <data name="printlink" xml:space="preserve">
    <value>Print order</value>
  </data>
  <data name="copyemployerinfo" xml:space="preserve">
    <value>Copy employer info</value>
  </data>
  <data name="tabprefix" xml:space="preserve">
    <value>Order #: </value>
  </data>
  <data name="activatesubmit" xml:space="preserve">
    <value>Activate order</value>
  </data>
  <data name="mapbutton" xml:space="preserve">
    <value>Google map</value>
  </data>
  <data name="assigncount" xml:space="preserve">
    <value>Assignment count</value>
  </data>
  <data name="dateneeded" xml:space="preserve">
    <value>Date needed:</value>
  </data>
  <data name="flexible" xml:space="preserve">
    <value>(Flexible)</value>
  </data>
  <data name="sharp" xml:space="preserve">
    <value>(sharp)</value>
  </data>
  <data name="transportFeeExtraShort" xml:space="preserve">
    <value>Extra fee</value>
  </data>
  <data name="transportFeeShort" xml:space="preserve">
    <value>Trans fee</value>
  </data>
  <data name="transportfeetotal" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="transportMethodIDShort" xml:space="preserve">
    <value>Trans method:</value>
  </data>
  <data name="woidcount" xml:space="preserve">
    <value>Worker #</value>
  </data>
  <data name="activeassignment" xml:space="preserve">
    <value>Active assignment</value>
  </data>
  <data name="activeorder" xml:space="preserve">
    <value>Active order</value>
  </data>
  <data name="btnActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="btnAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="btnCancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="btnCompleted" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="btnExpired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="btnPending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="cancelledassignment" xml:space="preserve">
    <value>Cancelled assignment</value>
  </data>
  <data name="cancelledorder" xml:space="preserve">
    <value>Cancelled order</value>
  </data>
  <data name="completeactiveassigned" xml:space="preserve">
    <value>Complete active &amp; assigned orders</value>
  </data>
  <data name="completedassignment" xml:space="preserve">
    <value>Completed assignment</value>
  </data>
  <data name="completedorder" xml:space="preserve">
    <value>Completed order</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="expiredassignment" xml:space="preserve">
    <value>Expired assignment</value>
  </data>
  <data name="expiredorder" xml:space="preserve">
    <value>Expired order</value>
  </data>
  <data name="groupviewerror" xml:space="preserve">
    <value>No active orders with fulfilled worker assignments for the date you selected.</value>
  </data>
  <data name="pendingassignment" xml:space="preserve">
    <value>Pending assignment</value>
  </data>
  <data name="pendingorder" xml:space="preserve">
    <value>Pending order</value>
  </data>
  <data name="printactive" xml:space="preserve">
    <value>Print active orders</value>
  </data>
  <data name="printactiveassigned" xml:space="preserve">
    <value>Print active &amp; assigned orders</value>
  </data>
  <data name="summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="weekday" xml:space="preserve">
    <value>Weekday</value>
  </data>
  <data name="workername" xml:space="preserve">
    <value>WORKER NAME:</value>
  </data>
  <data name="changeemployer" xml:space="preserve">
    <value>Change Employer</value>
  </data>
  <data name="empChgConfirm" xml:space="preserve">
    <value>Are you sure you want to move this work order? The tab will be saved and closed. To open it, you must go to the Employer list tab and find the new employer containing the work order.</value>
  </data>
  <data name="empChgConfirmTitle" xml:space="preserve">
    <value>Select a new employer</value>
  </data>
  <data name="empChgConfirmSubmit" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="btnOnline" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="onlineSource" xml:space="preserve">
    <value>Online source?</value>
  </data>
  <data name="editcancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="hirerAccount" xml:space="preserve">
    <value>Account History</value>
  </data>
  <data name="hireWorker" xml:space="preserve">
    <value>Hire a Worker</value>
  </data>
  <data name="workOrders" xml:space="preserve">
    <value>Work Orders</value>
  </data>
  <data name="listWorkAssignments" xml:space="preserve">
    <value>List of Work Assignments</value>
  </data>
  <data name="hirerProfile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="businessHoursModal" xml:space="preserve">
    <value>Business Hours</value>
  </data>
  <data name="acknowledgement" xml:space="preserve">
    <value>I acknowledge that:</value>
  </data>
  <data name="contactName" xml:space="preserve">
    <value>Who will be managing the worker(s) at the work site? This may be the person placing the order or another person.</value>
  </data>
  <data name="workDescription" xml:space="preserve">
    <value>Please be as detailed as possible in describing the work needed. Providing detailed information allows us to match you with the best available worker. If worker is asked to do something not listed here, he or she reserves the right to refuse service and minimum wages will still be charged.</value>
  </data>
  <data name="workersRequested" xml:space="preserve">
    <value>Workers Requested</value>
  </data>
  <data name="workSiteAddress1Dialog" xml:space="preserve">
    <value>Please provide the address where the work will be completed. This is the address to which we will send workers.</value>
  </data>
  <data name="submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="businessName" xml:space="preserve">
    <value>Business Name</value>
  </data>
  <data name="contactNameWorkSite" xml:space="preserve">
    <value>Contact Name (Work Site)</value>
  </data>
  <data name="disclaimer" xml:space="preserve">
    <value>Disclaimer</value>
  </data>
  <data name="isBusiness" xml:space="preserve">
    <value>Is a Business?</value>
  </data>
  <data name="phoneWorkSite" xml:space="preserve">
    <value>Phone (Work Site)</value>
  </data>
  <data name="timeNeeded" xml:space="preserve">
    <value>Time Needed</value>
  </data>
  <data name="workAssignments" xml:space="preserve">
    <value>Assign Worker</value>
  </data>
  <data name="workDetails" xml:space="preserve">
    <value>Work Details</value>
  </data>
  <data name="workRequest" xml:space="preserve">
    <value>Work Request</value>
  </data>
  <data name="workSiteAddress1" xml:space="preserve">
    <value>Address (1) Work Site</value>
  </data>
  <data name="workSiteAddress2" xml:space="preserve">
    <value>Address (2) Work Site</value>
  </data>
  <data name="weightRequirements" xml:space="preserve">
    <value>Weight Requirements</value>
  </data>
  <data name="orderConfirmation" xml:space="preserve">
    <value>Order Confirmation</value>
  </data>
</root>